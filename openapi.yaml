openapi: 3.0.0
info:
  title: Boulder Route LED Control API
  description: API for managing climbing routes and controlling LEDs on a climbing wall using modern RGB format.
  version: '1.0.0'
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/CEBREUS69/Boulder-Route-LED-Control-API/1.0.0
  - description: Make API
    url: https://hook.eu1.make.com/vvy6q2j2f1fderadyrals43jsbjv7m2l
paths:
  /save-route:
    post:
      summary: Save route data without displaying on the climbing wall
      operationId: saveRoute
      tags:
        - Routes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
      responses:
        '200':
          description: Successfully saved the route data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Bad request
        '500':
          description: Server error
        default:
          description: Unexpected error

  /display-route:
    post:
      summary: Send route data and command to display on the climbing wall using LEDs
      operationId: displayRoute
      tags:
        - Routes
        - Display
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
      responses:
        '200':
          description: Successfully sent the route data and activated the LEDs
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Bad request
        '500':
          description: Server error
        default:
          description: Unexpected error

components:
  schemas:
    Route:
      type: object
      additionalProperties: false
      required:
        - id
        - start
        - top
        - cells
      properties:
        id:
          type: string
          minLength: 8
          maxLength: 8
          pattern: '[0-9a-f]{8}'
          description: Unique identifier for the route
          example: '550e8400'
        start:
          type: string
          minLength: 2
          maxLength: 3
          pattern: '^[A-Z]{1}[0-9]{1,2}+$'
          description: Starting cell of the route
          example: 'A12'
        top:
          type: string
          minLength: 2
          maxLength: 3
          pattern: '^[A-Z]{1}[0-9]{1,2}+$'
          description: Top cell of the route
          example: 'A12'
        cells:
          type: array
          maxItems: 180
          items:
            $ref: '#/components/schemas/Cell'
    Cell:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          type: string
          minLength: 2
          maxLength: 3
          pattern: '^[A-Z]{1}[0-9]{1,2}+$'
          description: Unique identifier for the cell
          example: 'A12'
        colorBrightness:
          type: string
          description: Color and brightness of the cell in modern RGB format, e.g., "255 0 0 / 50%"
          pattern: '^([0-9]{1,3}\s{1,2}){3}(?:\/\s{1,2})?([0-9]{1,3})%?$'
          example: '255 0 0 / 50%'

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY

security:
  - ApiKeyAuth: []
